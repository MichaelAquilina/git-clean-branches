#!/bin/bash

function pulls_path {
    DOMAIN="$1"
    if [[ "$DOMAIN" == "gitlab.com" ]]; then
        printf "merge-requests/"
    elif [[ "$DOMAIN" == "github.com" ]]; then
        printf "pulls/"
    elif [[ "$DOMAIN" == "bitbucket.org" ]]; then
        printf "pull-requests/"
    elif target="$(git config "web.pulls.$DOMAIN")"; then
        printf "%s" "$target"
    elif target="$(git config web.pulls.default)"; then
        printf "%s" "$target"
    else
        # if all else fails, assume its github
        printf "pulls/"
    fi
}

function issues_path {
    DOMAIN="$1"
    if [[ "$DOMAIN" == "gitlab.com" ]]; then
        printf "issues/"
    elif [[ "$DOMAIN" == "github.com" ]]; then
        printf "issues/"
    elif [[ "$DOMAIN" == "bitbucket.org" ]]; then
        printf "issues/"
    elif target="$(git config "web.issues.$DOMAIN")"; then
        printf "%s" "$target"
    elif target="$(git config web.issues.default)"; then
        printf "%s" "$target"
    else
        # if all else fails, assume its github
        printf "issues/"
    fi
}

function get_domain {
    URL="$1"
    # shellcheck disable=SC2003
    delimiter="$(expr index "$URL" ://)"

    URL="${URL:$delimiter+2}"
    # shellcheck disable=SC2003
    delimiter="$(expr index "$URL" /)"

    URL="${URL:0:$delimiter-1}"
    printf "%s" "$URL"
}


DEFAULT_REMOTE="origin"

REMOTE="$DEFAULT_REMOTE"
TARGET="home"

for arg in "${@}"
do
    if [[ "$arg" == "--issues" ]] || [[ "$arg" == "-i" ]]; then
        TARGET="issues"
    elif [[ "$arg" == "--pulls" ]] || [[ "$arg" == "-p" ]]; then
        TARGET="pulls"
    elif [[ "$arg" == "--help" ]] || [[ "$arg" == "-h" ]]; then
        printf "PRINT HELP\\n"
        exit 0
    elif [[ "$arg" == "--"* ]] || [[ "$arg" == "-"* ]]; then
        printf "UNKNOWN ARGUMENT"
        exit 5
    else
        REMOTE="$arg"
    fi
done

if ! url="$(git remote get-url "$REMOTE" 2>/dev/null)"; then
    printf "available remotes:\\n"
    printf "%s\\n" "$(git remote)"
    exit 1
fi

if [[ "$url" = "git@"* ]]; then
    url="${url#git@}"

    delimiter="$(expr index "$url" :)"

    domain="${url:0:$delimiter-1}"
    path="${url:$delimiter}"

    target_url="https://$domain/$path"

elif [[ "$url" = "http"* ]]; then
    target_url="$url"

fi

if [[ -n "$target_url" ]]; then
    target_url="${target_url%.git}"

    if [[ "$TARGET" == "issues" ]]; then
        domain="$(get_domain "$target_url")"
        p="$(issues_path "$domain")"
        target_url="$target_url/$p"
    elif [[ "$TARGET" == "pulls" ]]; then
        domain="$(get_domain "$target_url")"
        p="$(pulls_path "$domain")"
        target_url="$target_url/$p"
    fi

    platform="$(uname)"
    if [[ "$platform" = "Linux" ]]; then
        xdg-open "$target_url" 2>/dev/null
    elif [[ "$platform" = "Darwin" ]]; then
        open "$target_url"
    else
        printf "Unknown target platform '%s'\\n" "$platform"
        exit 2
    fi
else
    printf "Could not determine target url to open for '%s' (%s)\\n" "$REMOTE" "$url"
    exit 3
fi
